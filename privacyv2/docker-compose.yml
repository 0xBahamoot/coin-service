version: "3.1"
services:
  chainsync:
    image: coinservice
    build:
      context: ./csv
      dockerfile: Dockerfile
    volumes:
      - ./data/chain:/home/chain
    working_dir: /home
    entrypoint: [./run.sh]
    environment:
      INDEXERID: -1
      MODE: "chainsync"
    env_file:
      - service.env
    depends_on:
      - mongo

  query:
    image: coinservice
    working_dir: /home
    entrypoint: [./run.sh]
    environment:
      INDEXERID: 0
      MODE: "query"
    env_file:
      - service.env
    depends_on:
      - chainsync

  indexer:
    image: coinservice
    working_dir: /home
    entrypoint: [./run.sh]
    environment:
      INDEXERID: 0
      MODE: "indexer"
    env_file:
      - service.env
    depends_on:
      - chainsync
      - mongo

  worker:
    image: coinservice
    deploy:
      replicas: 3
    working_dir: /home
    entrypoint: [./run.sh]
    environment:
      INDEXERID: 0
      MODE: "indexworker"
    env_file:
      - service.env
    depends_on:
      - indexer

  nginx-server:
    image: nginx-load-balancer
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 8090:80
    restart: unless-stopped
    depends_on:
      - query
      - indexer

  # watcher:
  #   image: alpine
  #   volumes:
  #     - .:/home
  #   entrypoint: [/home/servicewatcher]
  #   environment:
  #     SLACKHOOKCSV: ""
  #     CSVSYNCKER: "http://chainsyncv3:9001"
  #     FULLNODE: "http://51.161.119.66:9334"
  #   depends_on:
  #     - chainsyncv3

  mongo:
    image: mongo
    restart: always
    volumes:
      - ./data/mongodb:/data/db
      - ./data/mongodb_config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8029:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
# volumes:
#   mongodb:
#   mongodb_config:
